---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: longhorn
  namespace: longhorn-system
  annotations:
    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
spec:
  ingressClassName: nginx
  rules:
  - host: k8s-longhorn.domain.ru
    http:
      paths:
      - backend:
          service:
            name: longhorn-frontend
            port:
              number: 80
        path: /
        pathType: Prefix
  tls: 
  - hosts:
    - k8s-longhorn.domain.ru
    secretName: myingress-cert
status:
  loadBalancer:
    ingress:
    - ip: 10.10.103.187
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: grafana
#  namespace: monitoring
#spec:
#  ingressClassName: nginx
#  rules:
#  - host: k8s-test-grafana.domain.ru
#    http:
#      paths:
#      - backend:
#          service:
#            name: grafana
#            port:
#              number: 80
#        path: /
#        pathType: Prefix
#  tls: 
#  - hosts:
#    - k8s-test-grafana.domain.ru
#    secretName: myingress-cert
#status:
#  loadBalancer:
#    ingress:
#    - ip: 10.10.103.187
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: prometheus
#  namespace: monitoring
#spec:
#  ingressClassName: nginx
#  rules:
#  - host: k8s-test-prometheus.domain.ru
#    http:
#      paths:
#      - backend:
#          service:
#            name: prometheus-k8s
#            port:
#              number: 9090
#        path: /
#        pathType: Prefix
#  tls: 
#  - hosts:
#    - k8s-test-prometheus.domain.ru
#    secretName: myingress-cert
#status:
#  loadBalancer:
#    ingress:
#    - ip: 10.10.103.187
